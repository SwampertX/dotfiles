global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]
texIgnoreMathZones = ['texMathText']
texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")
ignore = texIgnoreMathZoneIds[0]
def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet template "Basic template" b
\documentclass[12pt, a4paper]{article}

\usepackage[a4paper, total={170mm,257mm}, left=20mm, top=20mm]{geometry}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage{amsmath, amssymb, amsthm}
\usepackage[outputdir=tmp]{minted}
\usepackage{lmodern}
\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{Tan Yee Jian (A0190190L)}
\chead{$1}
\rhead{Tutorial Group 03}


% figure support
\usepackage{import}
\usepackage{xifthen}
\pdfminorversion=7
\usepackage{pdfpages}
\usepackage{transparent}
\newcommand{\incfig}[1]{%
  \def\svgwidth{\columnwidth}
  \import{./figures/}{#1.pdf_tex}
}

\pdfsuppresswarningpagegroup=1

\newtheorem{thm}{Theorem}[section]
\newtheorem{crl}{Corollary}[thm]
\newtheorem{lemma}{Lemma}[thm]
\newtheorem{note}{Note}[thm]
\newtheorem{defn}{Definition}[section]
\newtheorem{ex}{Example}[section]
\newtheorem{prop}{Proposition}[section]
\newtheorem{obs}{Observation}
\newtheorem{claim}{Claim}

\newcommand{\pmat}[1]{ \begin{pmatrix}#1\end{pmatrix} }

\DeclareMathOperator{\spn}{span}
\DeclareMathOperator{\diam}{diam}


\title{$1}
\author{Tan Yee Jian}
\date{\today}

\begin{document}
	\maketitle
	$0
\end{document}
endsnippet

snippet code "Code Block"
\begin{minted}{${1:language}}
	$0
\end{minted}
endsnippet

snippet sourcefile "Source File"
\inputminted{${1:language}}{${2:filename}}$0
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

# snippet ilm "Math" wA
# $${1}$`!p
# if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
# 	snip.rv = ' '
# else:
# 	snip.rv = ''
# `$2
# endsnippet

snippet ilm "Math" wA
$${1}$${2}
endsnippet

snippet mt "Math" wA
\[ ${1:${VISUAL}} \] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet pw "^2" iA
^{$1}$0
endsnippet

snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet compl "complement" iA
^{c}
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

snippet box "Box"
\fbox{$1} $0
endsnippet

snippet bld "Bold"
\textbf{$1} $0
endsnippet

snippet itl "Italics"
\textit{$1} $0
endsnippet

snippet udl "Underline"
\underline{$1} $0
endsnippet

snippet sum "Summation" w
\sum\limits_{${1:from}}^{${2:to}}{${3:summand}} $0
endsnippet

snippet prod "Product" w
\prod\limits_{${1:from}}^{${2:to}}{${3:item}} $0
endsnippet

snippet enum "Enumerate"
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet bb "Blackboard" wA
\mathbb{$1} $0
endsnippet

snippet vb "Verbatim" wA
\verb|$1|$0
endsnippet

snippet \{ "curly braces" iA
\\{$1\\}$0
endsnippet

snippet prf "proof" bA
\begin{proof}
	${1:${VISUAL}}
.\end{proof}
endsnippet

snippet sln "solution" bA
\begin{proof}[Solution]
	${1:${VISUAL}}
.\end{proof}
endsnippet
